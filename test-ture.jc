#include "ASEIO.h"
int speed=0;
int speedchange=0;
int roundL=0;
int roundR=0;
int motoSL=0;
int motoSR=0;
int system2=0;
int setting_system2=0;
int AI_1=0;
int AI_2=0;
int AI_3=0;
int AI_4=0;
int AI_5=0;
int AI_6=0;
int AI_7=0;
int AI_8=0;
int AI_9=0;
int AI_10=0;
int AI_11=0;
int time=0;
void chose();

void main_2()
{
    while(setting_system2==1)
    {
        /*check moto*/
        SetMoto(0,speed);
        SetMoto(1,speed);
        /*check  AI*/
        while(1)
        {
          if(AI_1!=0)
          {
            if(AI_2!=0)
            {
              if(AI_3!=0)
              {
				if(AI_4!=0)
				{
					if(AI_5!=0)
					{
                        if(AI_6!=0)
                        {
                            if(AI_7!=0)
                            {
                                if(AI_8!=0)
                                {
                                    if(AI_9!=0)
                                    {
                                        if(AI_10!=0)
                                        {
                                            if(AI_11!=0)
                                            {
                                                break;
                                            }
                                            else
                                            {
                                                break;
                                                printf("ERROR/nAI_11n/n/n/n/n/n");
                                            }
                                        }
                                        else
                                        {
                                            break;
                                             printf("ERROR/nAI_10/n/n/n/n/n/n");
                                        }
                                    }
                                    else
                                    {
                                     break;
                                    printf("ERROR/nAI_9/n/n/n/n/n/n");
									}
                                }
                                else
                                {
                                 break;
                                printf("ERROR/nAI_8/n/n/n/n/n/n");
								}
                            }   
                            else
                            {
                                break;
                                printf("ERROR/nAI_7/n/n/n/n/n/n");
                            }
                        }
                        else
                        {
                            break;
                            printf("ERROR/nAI_6/n/n/n/n/n/n");
                        }
                     }
                      else
                      {
                        break;
                        printf("ERROR/nAI_5/n/n/n/n/n/n");
                        }
					}
                    else
                    {
                        break;
                         printf("ERROR/nAI_4/n/n/n/n/n/n");
                    }
              }
              else
              {
                break;
                printf("ERROR/nAI_3/n/n/n/n/n/n");
              }
              }
              else
              {
                break;
                printf("ERROR/nAI_2/n/n/n/n/n/n");
              }
            }
            else
            {
              break;
              printf("ERROR/nAI_1/n/n/n/n/n/n");
            }
          }
          /*check over*/
          }

      }

void report_speed()
{
    while(1)
    {
        if(roundL==1)
        {
            motoSL=speed-speedchange;
            motoSR=speed;
        }
        else
        {
            if(roundR==1)
            {
                motoSL=speed;
                motoSR=speed-speedchange;
            }
            else
            {
                motoSL=speed;
                motoSR=speed;
            }
        }
    }
}

void main()
{
    resettime();
    while(time!=0)
    {
    SetMoto(0,motoSL);
    SetMoto(1,motoSR);
    }
}

void report_AI()
{
    while(1)
    {
        AI_1=AI(1);
        AI_2=AI(2);
        AI_3=AI(3);
        AI_4=AI(4);
        AI_5=AI(5);
        AI_6=AI(6);
        AI_7=AI(7);
        AI_8=AI(8);
        AI_9=AI(9);
        AI_10=AI(10);
        AI_11=AI(11);
    }
}

void report_time()
{
    time=seconds() ;
}
/*N how many cossing need to cross;crossing just is crossing;speed just is speed;Lcut is speedchange about left;Rcut is speedcut about right;stop is running over to stop;time is time about go out crossing time*/
void WER_LineWay_CC(int N,int Crossing,int speed,int Lcut,int Rcut,int stop,float time)
{
    (
    int F1,F2,F3,F4,F5,F6,F7;
    int SpeedL, SpeedR,SpeedA;
    int i;
    SpeedL=speed-Lcut;
	SpeedR=speed-Rcut;
    SpeedA=speed*0.15;
    WER_SetMotor(SpeedL,SpeedR,0);
    for(i=0;i< N ;i++)
    {
		if(WER_line_colour==0)
		{
            F1=ReadEEPROM(10);
			F2=ReadEEPROM(11);
			F3=ReadEEPROM(12);
			F4=ReadEEPROM(13);
			F5=ReadEEPROM(14);
			F6=ReadEEPROM(15);
			F7=ReadEEPROM(16);
			if(Crossing==0)
			{
				while(AI(WER_Floor_IO_1)<F1)
				{
					if         ( AI(WER_Floor_IO_4)>F4)
                    WER_SetMotor(SpeedL, SpeedR, 0);
					else 
                    if((AI(WER_Floor_IO_6)>F6)&&(WER_Floor_Quantity==7))	
                    WER_SetMotor(SpeedL,		 -40, 0);
					else 
                    if((AI(WER_Floor_IO_2)>F2)&&(WER_Floor_Quantity==7))	
                    WER_SetMotor(	      -40, SpeedR, 0);
                    else 
                    {
                    if( AI(WER_Floor_IO_5)>F5)														
                    {
                    WER_SetMotor(SpeedL,SpeedA, 0);
                    }
                    else
                    { 
                    if( AI(WER_Floor_IO_3)>F3)
                    {														
                    }
                    else
                    {
                        WER_SetMotor(SpeedA,SpeedR, 0);
                     }
				}
                while(AI(WER_Floor_IO_1)>F1) WER_SetMotor(SpeedL,SpeedR,0);
			}
			else
			{
				while(AI(WER_Floor_IO_7)<F7)
				{
					if         ( AI(WER_Floor_IO_4)>F4)													WER_SetMotor(SpeedL,SpeedR,0);
                    else if((AI(WER_Floor_IO_2)>F2)&&(WER_Floor_Quantity==7))	WER_SetMotor(	   	  -40,SpeedR,0);
					else if((AI(WER_Floor_IO_6)>F6)&&(WER_Floor_Quantity==7))	WER_SetMotor(SpeedL,		-40,0);
					else if( AI(WER_Floor_IO_3)>F3)														WER_SetMotor(SpeedA,SpeedR,0);
					else if( AI(WER_Floor_IO_5)>F5)														WER_SetMotor(SpeedL,SpeedA,0);
					else{}
				}
                while(AI(WER_Floor_IO_7)>F7) WER_SetMotor(SpeedL,SpeedR,0);
			}
            wait(time);
        }
		else
		{
			F1=ReadEEPROM(17);
			F2=ReadEEPROM(18);
			F3=ReadEEPROM(19);
			F4=ReadEEPROM(20);
			F5=ReadEEPROM(21);
			F6=ReadEEPROM(22);
			F7=ReadEEPROM(23);
			if(Crossing==0)
			{
				while(AI(WER_Floor_IO_1)>F1)
				{
                    if         (AI(WER_Floor_IO_4)<F4)														WER_SetMotor(SpeedL,SpeedR,0);
                    else if((AI(WER_Floor_IO_6)<F6)&&(WER_Floor_Quantity==7))	WER_SetMotor(SpeedL,		-40,0);
					else if((AI(WER_Floor_IO_2)<F2)&&(WER_Floor_Quantity==7))	WER_SetMotor(	      -40,SpeedR,0);
                    else if(AI(WER_Floor_IO_5)<F5)														WER_SetMotor(SpeedL,SpeedA,0);
                    else if(AI(WER_Floor_IO_3)<F3)														WER_SetMotor(SpeedA,SpeedR,0);
                    else{}
				}
                while(AI(WER_Floor_IO_1)<F1) WER_SetMotor(SpeedL,SpeedR,0);
			}
			else
			{
				while(AI(WER_Floor_IO_7)>F7)
				{
                    if         (AI(WER_Floor_IO_4)<F4)														WER_SetMotor(SpeedL,SpeedR,0);
                    else if((AI(WER_Floor_IO_2)<F2)&&(WER_Floor_Quantity==7))	WER_SetMotor(	   	  -40,SpeedR,0);
                    else if((AI(WER_Floor_IO_6)<F6)&&(WER_Floor_Quantity==7))	WER_SetMotor(SpeedL,		-40,0);
                    else if(AI(WER_Floor_IO_3)<F3)														WER_SetMotor(SpeedA,SpeedR,0);
                    else if(AI(WER_Floor_IO_5)<F5)														WER_SetMotor(SpeedL,SpeedA,0);
					else{}
				}
                while(AI(WER_Floor_IO_7)<F7) WER_SetMotor(SpeedL,SpeedR,0);
			}
            wait(time);
		}
    }
    if(stop==1) {WER_SetMotor(0,0,0);}
}




//2013DUODUOProgramAA0905